{"ast":null,"code":"var _jsxFileName = \"/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/reviews/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Review({\n  reviews\n}) {\n  _s();\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/creator/quizzes/${reviews.quiz_id}/reviews`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched reviews:', data);\n        // Handle the fetched data as needed\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n    if (reviews.quiz_id) {\n      fetchReviews();\n    }\n  }, [reviews.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: reviews.ratings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Review","reviews","_s","fetchReviews","response","fetch","quiz_id","headers","localStorage","getItem","ok","Error","data","json","console","log","error","id","children","ratings","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/reviews/Review.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nfunction Review({ reviews }) {\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/creator/quizzes/${reviews.quiz_id}/reviews`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched reviews:', data);\n        // Handle the fetched data as needed\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    if (reviews.quiz_id) {\n      fetchReviews();\n    }\n  }, [reviews.id]);\n\n  return (\n    <div>\n       <p>{reviews.ratings}</p>\n    </div>\n  );\n}\n\nexport default Review;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC3BL,SAAS,CAAC,MAAM;IACd,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCJ,OAAO,CAACK,OAAO,UAAU,EAAE;UAC/FC,OAAO,EAAE;YACP,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;UAC3D;QACF,CAAC,CAAC;QACF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC;QACrC;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,IAAIf,OAAO,CAACK,OAAO,EAAE;MACnBH,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACF,OAAO,CAACgB,EAAE,CAAC,CAAC;EAEhB,oBACElB,OAAA;IAAAmB,QAAA,eACGnB,OAAA;MAAAmB,QAAA,EAAIjB,OAAO,CAACkB;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACrB,EAAA,CAhCQF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAkCf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}