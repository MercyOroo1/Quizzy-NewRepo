{"ast":null,"code":"var _jsxFileName = \"/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/responses/ResponseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Response from './Response';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponseForm = ({\n  question_id,\n  quiz_id,\n  user_id\n}) => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [data, setData] = useState({});\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Response submitted:', response);\n\n    // Make a POST request to create a new response\n    fetch('http://localhost:5000/participant/responses', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        response: response,\n        question_id: question_id,\n        quiz_id: quiz_id,\n        user_id: user_id\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Response created:', data);\n      setIsSubmitted(true);\n      setData(data);\n      let result = data;\n      result.map(r => setIsCorrect(r.is_correct));\n      console.log(isCorrect);\n    }).catch(error => console.error('Error creating response:', error));\n  };\n  useEffect(() => {\n    if (isCorrect) {\n      alert('Correct answer!');\n    } else {\n      alert('Incorrect answer. Try again!');\n    }\n  }, [isCorrect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: response,\n        onChange: event => setResponse(event.target.value),\n        placeholder: \"Type your response here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(Response, {\n      response: response,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponseForm, \"+0qlGfmJuGCnawejPnx0zb7RplI=\");\n_c = ResponseForm;\nexport default ResponseForm;\nvar _c;\n$RefreshReg$(_c, \"ResponseForm\");","map":{"version":3,"names":["React","useState","Response","jsxDEV","_jsxDEV","ResponseForm","question_id","quiz_id","user_id","_s","response","setResponse","isSubmitted","setIsSubmitted","isCorrect","setIsCorrect","data","setData","handleSubmit","event","preventDefault","console","log","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","json","result","map","r","is_correct","catch","error","useEffect","alert","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/responses/ResponseForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Response from './Response';\n\nconst ResponseForm = ({ question_id, quiz_id, user_id }) => {\n  const [response, setResponse] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  const [data, setData] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Response submitted:', response);\n\n    // Make a POST request to create a new response\n    fetch('http://localhost:5000/participant/responses', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n      },\n      body: JSON.stringify({ \n        response: response, \n        question_id: question_id, \n        quiz_id: quiz_id, \n        user_id: user_id \n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Response created:', data);\n        setIsSubmitted(true);\n        setData(data);\n        let result = data\n        result.map(r => setIsCorrect(r.is_correct))\n        console.log(isCorrect)\n       \n      })\n      .catch(error => console.error('Error creating response:', error));\n  };\n  \n  useEffect(() => {\n\n    if (isCorrect) {\n  \n      alert('Correct answer!');\n  \n    } else {\n  \n      alert('Incorrect answer. Try again!');\n  \n    }\n  \n  }, [isCorrect]);\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Enter your response:</label>\n        <input\n          type=\"text\"\n          value={response}\n          onChange={(event) => setResponse(event.target.value)}\n          placeholder=\"Type your response here\"\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {isSubmitted && <Response response={response} data={data} />}\n    </div>\n  );\n};\n\nexport default ResponseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}