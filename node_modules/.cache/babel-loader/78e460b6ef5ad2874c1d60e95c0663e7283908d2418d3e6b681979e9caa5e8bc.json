{"ast":null,"code":"var _jsxFileName = \"/Users/lennywachira/Documents/GitHub/Quizzy-NewRepo/src/responses/ResponseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Response from './Response';\n// import './ResponseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponseForm = ({\n  question_id,\n  quiz_id,\n  user_id\n}) => {\n  _s();\n  const [response, setResponse] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Response submitted:', response);\n    fetch('http://localhost:5555/participant/responses', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        response: response,\n        question_id: question_id,\n        quiz_id: quiz_id,\n        user_id: user_id\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Response created:', data);\n      setIsSubmitted(true);\n      setData(data);\n    }).catch(error => {\n      console.error('Error creating response:', error);\n      setError('There was an error submitting your response. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"response-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: response,\n        onChange: event => setResponse(event.target.value),\n        placeholder: \"Type your response here\",\n        className: \"response-form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"response-form-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isSubmitted && data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-message\",\n      children: /*#__PURE__*/_jsxDEV(Response, {\n        response: response,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponseForm, \"XCNGG64ncY5qStCtJzq/+8fzL7o=\");\n_c = ResponseForm;\nexport default ResponseForm;\nvar _c;\n$RefreshReg$(_c, \"ResponseForm\");","map":{"version":3,"names":["React","useState","Response","jsxDEV","_jsxDEV","ResponseForm","question_id","quiz_id","user_id","_s","response","setResponse","isSubmitted","setIsSubmitted","data","setData","error","setError","handleSubmit","event","preventDefault","console","log","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","json","catch","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lennywachira/Documents/GitHub/Quizzy-NewRepo/src/responses/ResponseForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Response from './Response';\n// import './ResponseForm.css';\n\nconst ResponseForm = ({ question_id, quiz_id, user_id }) => {\n  const [response, setResponse] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Response submitted:', response);\n\n    fetch('http://localhost:5555/participant/responses', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n      },\n      body: JSON.stringify({ \n        response: response, \n        question_id: question_id, \n        quiz_id: quiz_id, \n        user_id: user_id \n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Response created:', data);\n      setIsSubmitted(true);\n      setData(data);\n    })\n    .catch(error => {\n      console.error('Error creating response:', error);\n      setError('There was an error submitting your response. Please try again.');\n    });\n  };\n\n  return (\n    <div className=\"response-form-container\">\n      <form onSubmit={handleSubmit}>\n        {/* <label className=\"response-form-label\">Enter your response:</label> */}\n        <input\n          type=\"text\"\n          value={response}\n          onChange={(event) => setResponse(event.target.value)}\n          placeholder=\"Type your response here\"\n          className=\"response-form-input\"\n        />\n        <button type=\"submit\" className=\"response-form-button\">Submit</button>\n      </form>\n      {isSubmitted && data && <div className=\"response-message\"><Response response={response} data={data} /></div>}\n      {error && <div className=\"response-error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default ResponseForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}