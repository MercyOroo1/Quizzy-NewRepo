{"ast":null,"code":"var _jsxFileName = \"/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/questions/Questions.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questions({\n  quizzes\n}) {\n  _s();\n  const {\n    quizId\n  } = useParams(); // Get the quiz ID from the URL\n  const quiz = quizzes.find(q => q.id === parseInt(quizId)); // Find the quiz based on the quiz ID\n\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Quiz not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this); // Handle the case where the quiz ID is invalid or the quiz is not found\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), quiz.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: question.question_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"D9dYXQCOJ0oIObDRmyRx1985Da4=\", false, function () {\n  return [useParams];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Questions","quizzes","_s","quizId","quiz","find","q","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","questions","map","question","question_text","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/questions/Questions.js"],"sourcesContent":["\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Questions.css';\n\nfunction Questions({ quizzes }) {\n  const { quizId } = useParams(); // Get the quiz ID from the URL\n  const quiz = quizzes.find(q => q.id === parseInt(quizId)); // Find the quiz based on the quiz ID\n\n  if (!quiz) {\n    return <div>Quiz not found!</div>; // Handle the case where the quiz ID is invalid or the quiz is not found\n  }\n\n  return (\n    <div className=\"questions\">\n      <h2>{quiz.title}</h2>\n      {quiz.questions.map(question => (\n        <div key={question.id} className=\"question\">\n          <h5>{question.question_text}</h5>\n          {/* Render question options here */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Questions;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kCAAkC;AACzC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMO,IAAI,GAAGH,OAAO,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE3D,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOL,OAAA;MAAAU,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACrC;EAEA,oBACEd,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBV,OAAA;MAAAU,QAAA,EAAKL,IAAI,CAACW;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpBT,IAAI,CAACY,SAAS,CAACC,GAAG,CAACC,QAAQ,iBAC1BnB,OAAA;MAAuBe,SAAS,EAAC,UAAU;MAAAL,QAAA,eACzCV,OAAA;QAAAU,QAAA,EAAKS,QAAQ,CAACC;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GADzBK,QAAQ,CAACX,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CAnBQF,SAAS;EAAA,QACGH,SAAS;AAAA;AAAAuB,EAAA,GADrBpB,SAAS;AAqBlB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}