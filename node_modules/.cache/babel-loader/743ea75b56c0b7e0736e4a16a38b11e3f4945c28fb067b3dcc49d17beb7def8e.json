{"ast":null,"code":"var _jsxFileName = \"/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/quizzes/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuizForm from './QuizForm';\nimport UpdateQuiz from './UpdateQuiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz({\n  onRefresh\n}) {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [quiz, setQuiz] = useState({\n    title: '',\n    description: ''\n  });\n  const handleAddQuiz = newQuiz => {\n    const updatedQuizzesArray = [...quizzes, newQuiz];\n    setQuizzes(updatedQuizzesArray);\n    setQuiz({\n      title: '',\n      description: ''\n    });\n  };\n  const handleUpdateQuiz = updatedQuiz => {\n    const updatedQuizzesArray = quizzes.map(quiz => {\n      if (quiz.id === updatedQuiz.id) return updatedQuiz;else return quiz;\n    });\n    setQuiz(updatedQuizzesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QuizForm, {\n      onAddQuiz: handleAddQuiz,\n      quiz: quiz,\n      setQuiz: setQuiz,\n      onRefresh: onRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateQuiz, {\n      handleUpdateQuiz: handleUpdateQuiz,\n      onRefresh: onRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quizzes.map((quiz, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quiz.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"P/Ik6GPQ9IPszHt68cCm8kFyUsA=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","QuizForm","UpdateQuiz","jsxDEV","_jsxDEV","Quiz","onRefresh","_s","quizzes","setQuizzes","quiz","setQuiz","title","description","handleAddQuiz","newQuiz","updatedQuizzesArray","handleUpdateQuiz","updatedQuiz","map","id","children","onAddQuiz","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/quizzes/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QuizForm from './QuizForm';\nimport UpdateQuiz from './UpdateQuiz';\n\nfunction Quiz({onRefresh}) {\n  const [quizzes, setQuizzes] = useState([]);\n  const [quiz, setQuiz] = useState({ title: '', description: '' });\n\n  const handleAddQuiz = (newQuiz) => {\n    const updatedQuizzesArray = [...quizzes, newQuiz];\n    setQuizzes(updatedQuizzesArray);\n    setQuiz({ title: '', description: '' });\n  };\n\n  const handleUpdateQuiz = (updatedQuiz) => {\n    const updatedQuizzesArray = quizzes.map(quiz => {\n      if (quiz.id === updatedQuiz.id) return updatedQuiz\n      else return quiz;  \n    });\n    setQuiz(updatedQuizzesArray);\n  }\n\n  return (\n    <div>\n      <QuizForm onAddQuiz={handleAddQuiz} quiz={quiz} setQuiz={setQuiz} onRefresh = {onRefresh} />\n      <UpdateQuiz handleUpdateQuiz = {handleUpdateQuiz} onRefresh = {onRefresh}/>\n      <ul>\n        {quizzes.map((quiz, index) => (\n          <li key={index}>\n            <h2>{quiz.title}</h2>\n            <p>{quiz.description}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,IAAIA,CAAC;EAACC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAAEY,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEhE,MAAMC,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,mBAAmB,GAAG,CAAC,GAAGR,OAAO,EAAEO,OAAO,CAAC;IACjDN,UAAU,CAACO,mBAAmB,CAAC;IAC/BL,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMI,gBAAgB,GAAIC,WAAW,IAAK;IACxC,MAAMF,mBAAmB,GAAGR,OAAO,CAACW,GAAG,CAACT,IAAI,IAAI;MAC9C,IAAIA,IAAI,CAACU,EAAE,KAAKF,WAAW,CAACE,EAAE,EAAE,OAAOF,WAAW,MAC7C,OAAOR,IAAI;IAClB,CAAC,CAAC;IACFC,OAAO,CAACK,mBAAmB,CAAC;EAC9B,CAAC;EAED,oBACEZ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACH,QAAQ;MAACqB,SAAS,EAAER,aAAc;MAACJ,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACL,SAAS,EAAIA;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5FtB,OAAA,CAACF,UAAU;MAACe,gBAAgB,EAAIA,gBAAiB;MAACX,SAAS,EAAIA;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3EtB,OAAA;MAAAiB,QAAA,EACGb,OAAO,CAACW,GAAG,CAAC,CAACT,IAAI,EAAEiB,KAAK,kBACvBvB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAKX,IAAI,CAACE;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBtB,OAAA;UAAAiB,QAAA,EAAIX,IAAI,CAACG;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFlBC,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CAhCQF,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}