{"ast":null,"code":"var _jsxFileName = \"/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/questions/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport SingleQuestion from './SingleQuestion';\nimport './Questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questions({\n  userId\n}) {\n  _s();\n  const params = useParams();\n  const quizId = params.quizId;\n  const [questions, setQuestions] = useState([]);\n  const [rating, setRating] = useState('');\n  const [reviewText, setReviewText] = useState('');\n  useEffect(() => {\n    if (quizId) {\n      fetch(`http://127.0.0.1:5000/participant/quizzes/${quizId}/questions`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        setQuestions(data);\n      }).catch(error => console.error('Error fetching questions:', error));\n    }\n  }, [quizId]);\n  const handleSubmitReview = e => {\n    e.preventDefault();\n    fetch(\"http://127.0.0.1:5000/participant/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        rating: parseInt(rating),\n        // Assuming rating is a number\n        review_text: reviewText,\n        quiz_id: quizId\n      })\n    }).then(r => r.json()).then(newReview => {\n      setRating('');\n      setReviewText('');\n      console.log(newReview);\n    }).catch(error => {\n      console.error(\"Error creating review:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: [\"Questions for Quiz \", quizId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(SingleQuestion, {\n        question: question,\n        userId: userId\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"How would you rate this quiz on a scale of one to ten \\uD83E\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitReview,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: rating,\n            onChange: e => setRating(e.target.value),\n            min: \"1\",\n            max: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Review:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: reviewText,\n            onChange: e => setReviewText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/quizzes\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"Bzqog6iBeqaeONfYtk5vjkJ07pc=\", false, function () {\n  return [useParams];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","SingleQuestion","jsxDEV","_jsxDEV","Questions","userId","_s","params","quizId","questions","setQuestions","rating","setRating","reviewText","setReviewText","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","console","handleSubmitReview","e","preventDefault","method","body","JSON","stringify","parseInt","review_text","quiz_id","r","newReview","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","question","id","onSubmit","type","value","onChange","target","min","max","to","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/questions/Questions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport SingleQuestion from './SingleQuestion';\nimport './Questions.css';\n\nfunction Questions({ userId }) {\n  const params = useParams();\n  const quizId = params.quizId;\n\n  const [questions, setQuestions] = useState([]);\n  const [rating, setRating] = useState('');\n  const [reviewText, setReviewText] = useState('');\n\n  useEffect(() => {\n    if (quizId) {\n      fetch(`http://127.0.0.1:5000/participant/quizzes/${quizId}/questions`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          setQuestions(data);\n        })\n        .catch(error => console.error('Error fetching questions:', error));\n    }\n  }, [quizId]);\n\n  const handleSubmitReview = (e) => {\n    e.preventDefault();\n    fetch(\"http://127.0.0.1:5000/participant/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        rating: parseInt(rating),  // Assuming rating is a number\n        review_text: reviewText,\n        quiz_id: quizId\n      }),\n    })\n      .then((r) => r.json())\n      .then((newReview) => {\n        setRating('');\n        setReviewText('');\n        console.log(newReview);\n      })\n      .catch((error) => {\n        console.error(\"Error creating review:\", error);\n      });\n  }\n\n  return (\n    <div>\n      <h2 className='header'>Questions for Quiz {quizId}</h2>\n      <ul>\n        {questions.map(question => <SingleQuestion key={question.id} question={question} userId={userId} />)}\n      </ul>\n      <div className='reviews'>\n        <p>How would you rate this quiz on a scale of one to ten ðŸ¤”</p>\n        <form onSubmit={handleSubmitReview}>\n          <label>\n            Rating:\n            <input type=\"number\" value={rating} onChange={(e) => setRating(e.target.value)} min=\"1\" max=\"10\" />\n          </label>\n          <label>\n            Review:\n            <textarea value={reviewText} onChange={(e) => setReviewText(e.target.value)} />\n          </label>\n          <button type=\"submit\">Submit Review</button>\n        </form>\n      </div>\n      <Link to='/quizzes'>\n        <button className='back-btn'>Back</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Questions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}