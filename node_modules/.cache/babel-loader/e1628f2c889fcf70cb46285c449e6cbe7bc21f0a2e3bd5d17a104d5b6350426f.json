{"ast":null,"code":"var _jsxFileName = \"/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/questions/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questions() {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const [questions, setQuestions] = useState([]);\n  console.log(quizId);\n  useEffect(() => {\n    if (quizId) {\n      console.log(quizId);\n      fetch(`http://127.0.0.1:5000/participant/quizzes/${quizId}/questions`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        setQuestions(data);\n      }).catch(error => console.error('Error fetching questions:', error));\n    }\n  }, [quizId]);\n  console.log(questions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Questions for Quiz \", quizId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"3GipoUqmMm7XDjAXtjRwZfnD53o=\", false, function () {\n  return [useParams];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Questions","_s","quizId","questions","setQuestions","console","log","fetch","headers","localStorage","getItem","then","response","ok","Error","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","text","_c","$RefreshReg$"],"sources":["/home/mercy/Documents/Moringa/Phase-4/frontend/quizzy/src/questions/Questions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Questions() {\n  const { quizId } = useParams();\n  const [questions, setQuestions] = useState([]);\n  console.log(quizId)\n\n  useEffect(() => {\n    if (quizId) {\n        console.log(quizId)\n      fetch(`http://127.0.0.1:5000/participant/quizzes/${quizId}/questions`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + localStorage.getItem('token')\n        }\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          console.log(data)\n          setQuestions(data)\n        })\n        .catch(error => console.error('Error fetching questions:', error));\n    }\n  }, [quizId]);\n  console.log(questions)\n\n  return (\n    <div>\n      <h2>Questions for Quiz {quizId}</h2>\n      <ul>\n        {questions.map((question, index) => (\n          <li key={index}>{question.text}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Questions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9CU,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EAEnBN,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,EAAE;MACRG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;MACrBK,KAAK,CAAC,6CAA6CL,MAAM,YAAY,EAAE;QACrEM,OAAO,EAAE;UACP,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC3D;MACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACZX,OAAO,CAACC,GAAG,CAACU,IAAI,CAAC;QACjBZ,YAAY,CAACY,IAAI,CAAC;MACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIb,OAAO,CAACa,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;IACtE;EACF,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EACZG,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtB,oBACEJ,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,GAAI,qBAAmB,EAACjB,MAAM;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCxB,OAAA;MAAAoB,QAAA,EACGhB,SAAS,CAACqB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B3B,OAAA;QAAAoB,QAAA,EAAiBM,QAAQ,CAACE;MAAI,GAArBD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtB,EAAA,CAxCQD,SAAS;EAAA,QACGH,SAAS;AAAA;AAAA+B,EAAA,GADrB5B,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}